manifest {
  author = 'Dan Fornika, James Zlosnik'
  name = 'BCCDC-PHL/align-compare'
  description = 'Compare sequences based on alignments'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
  version = '0.1.0'
}

params {
  profile = false
  cache = ''
  fasta_exts = ['.fasta', '.fa', '.fna']
  fasta_1_search_path = makeFastaSearchPath( params.fasta_1_input, fasta_exts )
  fasta_2_search_path = makeFastaSearchPath( params.fasta_2_input, fasta_exts )
  samplesheet_input = 'NO_FILE'
  gap_open_penalty = 10
  gap_extend_penalty = 1
  pipeline_short_name = parsePipelineName(manifest.toMap().get('name'))
  pipeline_minor_version = parseMinorVersion(manifest.toMap().get('version'))
}

def parseMinorVersion(version) {
    minor_version = version.split('\\.')[0..1].join('.')
    return minor_version
}

def parsePipelineName(name) {
    short_name = name.split('/')[1]
    return short_name
}


def makeFastaSearchPath ( root_path, fasta_exts ) {
    def fasta_search_path = []
      for (ext in fasta_exts) {
          fasta_search_path.add(root_path.toString() + '/*' + ext.toString())
      }
    return fasta_search_path
}

profiles {
  conda {
     process.conda = "$baseDir/environments/environment.yml"
     if (params.cache){
       conda.cacheDir = params.cache
     }
  }
}

process {
  withName: mafft {
    cpus = 8
  }
}
